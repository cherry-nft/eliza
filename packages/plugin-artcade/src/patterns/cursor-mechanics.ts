import { GamePattern } from "../types";
import { v4 as uuidv4 } from "uuid";

export const glitchInvasionPattern: GamePattern = {
    id: uuidv4(),
    type: "game_mechanic",
    pattern_name: "cursor_trail_scoring",
    content: {
        html: `<div id='gameArea'></div>`,
        js: `document.addEventListener('mousemove', e => {
            const trail = document.createElement('div');
            trail.className = 'trail';
            trail.style.left = e.clientX + 'px';
            trail.style.top = e.clientY + 'px';
            gameArea.appendChild(trail);
            setTimeout(() => trail.remove(), 1000);
            score += 1;
            document.getElementById('score').textContent = score;
        });`,
        css: `.trail {
            position: absolute;
            width: 32px;
            height: 32px;
            background: #0f0;
            border-radius: 50%;
            transition: all 0.3s;
        }`,
        context: "cursor_mechanics",
        metadata: {
            interaction_type: "cursor_following",
            game_mechanics: [
                {
                    type: "movement",
                    properties: {
                        uses_mouse: true,
                        creates_trail: true,
                        affects_score: true,
                        cleanup_timeout: 1000,
                    },
                },
            ],
            visual_type: "trail",
            effectiveness_metrics: {
                responsiveness: 1.0, // Immediate response to cursor
                visual_feedback: 0.9, // Clear visual trail
                performance: 0.95, // Efficient cleanup
                engagement: 0.85, // Simple but addictive
            },
        },
    },
    embedding: [], // Will be generated by VectorDatabase
    effectiveness_score: 0.925, // Average of metrics
    usage_count: 1,
};
